version: '3.8'

networks:
  monitoring:
    driver: bridge


volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  node-exporter:
    container_name: node-exporter
    build:
      context: ./docker/node-exporter/
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    privileged: true
    ports:
      - 9100
    networks:
      - monitoring

  alertmanager:
    container_name: alertmanager
    hostname: alertmanager
    build:
      context: ./docker/alertmanager/
    volumes:
      - ./docker/alertmanager/alertmanager.conf:/etc/alertmanager/alertmanager.conf
    command:
      - '--config.file=/etc/alertmanager/alertmanager.conf'
    ports:
      - 9093:9093
    networks:
      - monitoring

  prometheus:
    container_name: prometheus
    hostname: prometheus
    build:
      context: ./docker/prometheus/
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/alertmanager/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    links:
      - alertmanager:alertmanager
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    container_name: grafana
    hostname: grafana
    build:
      context: ./docker/grafana/
    volumes:
      - ./docker/grafana/grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ./docker/grafana/grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - monitoring

  mysqld:
    image: mysql:5.6
    container_name: mysqld
    environment:
      - MYSQL_ROOT_PASSWORD=password
#    volumes:
#      - ./docker/mysql-exporter:/etc/mysql/conf.d
#      - ~/var/mysql:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - monitoring

  mysqld-exporter:
    image: prom/mysqld-exporter:latest
#    command:
#      - -collect.info_schema.tablestats
    container_name: mysqld-exporter
#    volumes:
#      - ./docker/mysql-exporter/.my.cnf:/root/.my.cnf
    environment:
      - DATA_SOURCE_NAME=root:password@tcp(192.168.1.16:63311)/
    ports:
      - 9104:9104
    links:
      - mysqld
    depends_on:
      - mysqld
    networks:
      - monitoring